diff --git a/src/lib_ccx/ccx_encoders_common.c b/src/lib_ccx/ccx_encoders_common.c
index 0e2acb7..21df693 100644
--- a/src/lib_ccx/ccx_encoders_common.c
+++ b/src/lib_ccx/ccx_encoders_common.c
@@ -800,9 +800,9 @@ static int init_output_ctx(struct encoder_ctx *ctx, struct encoder_cfg *cfg)
 				basefilename = get_basename(cfg->output_filename);
 				extension = get_file_extension(cfg->write_format);
 
-				ret = init_write(&ctx->out[0], strdup(cfg->output_filename), cfg->with_semaphore);
+				ret = init_write(&ctx->out[0], create_outfilename(basefilename, ".CC1", extension), cfg->with_semaphore);				
 				check_ret(cfg->output_filename);
-				ret = init_write(&ctx->out[1], create_outfilename(basefilename, "_2", extension), cfg->with_semaphore);
+				ret = init_write(&ctx->out[1], create_outfilename(basefilename, ".CC2", extension), cfg->with_semaphore);
 				check_ret(ctx->out[1].filename);
 			}
 			else
@@ -818,9 +818,9 @@ static int init_output_ctx(struct encoder_ctx *ctx, struct encoder_cfg *cfg)
 
 			if (cfg->extract == 12)
 			{
-				ret = init_write(&ctx->out[0], create_outfilename(basefilename, "_1", extension), cfg->with_semaphore);
+				ret = init_write(&ctx->out[0], create_outfilename(basefilename, ".CC1", extension), cfg->with_semaphore);
 				check_ret(ctx->out[0].filename);
-				ret = init_write(&ctx->out[1], create_outfilename(basefilename, "_2", extension), cfg->with_semaphore);
+				ret = init_write(&ctx->out[1], create_outfilename(basefilename, ".CC2", extension), cfg->with_semaphore);
 				check_ret(ctx->out[1].filename);
 			}
 			else
diff --git a/src/lib_ccx/lib_ccx.h b/src/lib_ccx/lib_ccx.h
index 51960d7..3698a04 100644
--- a/src/lib_ccx/lib_ccx.h
+++ b/src/lib_ccx/lib_ccx.h
@@ -1,7 +1,7 @@
 #ifndef CCX_CCEXTRACTOR_H
 #define CCX_CCEXTRACTOR_H
 
-#define VERSION "0.84"
+#define VERSION "0.84-MOD"
 
 // Load common includes and constants for library usage
 #include "ccx_common_platform.h"
