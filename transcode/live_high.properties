#
# Copyright 2016 The OpenDCT Authors. All Rights Reserved
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

#===================================================================================================
# DO NOT EDIT THIS FILE. IT WILL BE OVERWRITTEN ON UPGRADE.
# If you want to make your own changes, make a copy of this file and edit the copy.
#===================================================================================================

# OpenDCT Live Transcoding Profile for High Performance Computers

# Set this to true to always reload these properties when this transcoding profile is requested.
# Alternatively these properties are only loaded once.
g.conf.always_reload=false

# This is the profile name to be displayed. When referencing this profile in opendct.properties, use
# the name of this file without the .properties extension.
g.conf.friendly_name="High Performance"

# Change this value to true to disable transcoding on all capture devices using this profile. This
# effectively will cause all video streams to be copied instead.
g.conf.disable=false

# If this is true, transcoding will only happen if the content is interlaced.
v.conf.t.deinterlace_only=true

# If this is false, all content will be assumed progressive. The deinterlace_only option must be set
# false if this options is set false or no transcoding will happen. Interlaced content can still be
# detected by filters, but progressive_filter will always be selected.
v.conf.t.deinterlace_detect=true

# If this is true, transcoding will always happen even if the program is transcoding to the exact
# same format.
v.conf.t.always=false

# This is the default video codec to be used for all video encoding.
v.conf.e.default.codec=h264

# A codec can be mapped to another codec so that if for example you want all mpeg2video to be
# converted to h264, you can uncomment the line below. When this option is defined, transcoding will
# happen regardless of other options whenever the video format is in this example mpeg2video.
#v.conf.t.codec_map.mpeg2video=h264

# A codec can be transcoded to a preferred codec. QuickSync is not available yet, but this is
# how you would tell the program to use the alternate codec. 'd' is decoding. 'e' is encoding.
#v.conf.d.codec_map.h264=qsv_h264
#v.conf.e.codec_map.h264=qsv_h264

#===================================================================================================
# These are the default options for encoding to h264. dict.values are codec specific options.
# These options are not checked for sanity.
#===================================================================================================
# Change this to baseline and the level to 3.1 if you're having problems with playback.
v.e.default.h264.dict.profile=high

# Occasionally 4.2 level content will not play on the HD300 extender.
v.e.default.h264.dict.level=4.1

# Allowed: ultrafast, superfast, veryfast, faster, fast, medium, slow, slower, veryslow, placebo
v.e.default.h264.dict.preset=veryfast

# Allowed: film, animation, grain, stillimage, psnr, ssim, fastdecode, zerolatency
v.e.default.h264.dict.tune=fastdecode,zerolatency

# 23 is the h264 default. Increase this number for speed (max 51). Decrease it for quality (min 0).
v.e.default.h264.dict.crf=18

# Use this instead of crf for lossless compression. The profile also needs to be changed to high444.
#v.e.default.h264.dict.qp=0

# The following setting must be set or the ultrafast, faster and fast presets will fail to open the
# codec.
v.e.default.h264.dict.qcomp=0.60

# Uncomment the line below to limit the bitrate.
#v.e.default.bit_rate=6400000

# The following 4 settings must be set or the codec will complain.
# motion estimation comparison function
v.e.default.h264.me_cmp=1
v.e.default.h264.me_range=16
v.e.default.h264.qmin=0
v.e.default.h264.qmax=69

# Two threads is more than enough for one transcoding. Reasons to not use more threads:
# 1) If more than one transcoding is being performed at the same time, the CPU cache hits will
# decrease as all of the cores are intensely working simultaneously on very different content.
# 2) The more cores involved, the longer it actually takes before the first frame is written and
# for the last frame to be written.
# 3) The decoding and filtering are all currently done on one thread and will potentially limit the
# scalability.
v.e.default.h264.dict.threads=2
v.e.default.h264.dict.lookahead_threads=1
v.e.default.h264.dict.sliced_threads=0

#===================================================================================================
# These are other settings available. The value here is not necessarily the default. You may need to
# refer to AVCodecContext to figure out if you really want to configure them or not. Not all codecs
# will do anything with these settings. If there's a description, it's what is in the code.
#===================================================================================================
# maximum bitrate
#v.e.default.h264.rc_max_rate
# minimum bitrate
#v.e.default.h264.rc_min_rate
#v.e.default.h264.b_frame_strategy
# qscale factor between IP and B-frames If > 0 then the last P-frame quantizer will be used (q= lastp_q*factor+offset). If < 0 then normal ratecontrol will be done (q= -normal_q*factor+offset).
#v.e.default.h264.b_quant_factor
# qscale offset between IP and B-frames
#v.e.default.h264.b_quant_offset
# Adjust sensitivity of b_frame_strategy 1.
#v.e.default.h264.b_sensitivity
#v.e.default.h264.bidir_refine
# number of bits the bitstream is allowed to diverge from the reference. the reference can be CBR (for CBR pass1) or VBR (for pass2). Unused for constant quantizer encoding.
#v.e.default.h264.bit_rate_tolerance
# ME diamond size & shape
#v.e.default.h264.dia_size
# error concealment flags
#v.e.default.h264.error_concealment
# frame skip comparison function
#v.e.default.h264.frame_skip_cmp
#v.e.default.h264.frame_skip_exp
#v.e.default.h264.frame_skip_factor
#v.e.default.h264.frame_skip_threshold
# the number of pictures in a group of pictures, or 0 for intra_only
#v.e.default.h264.gop_size
# qscale factor between P and I-frames If > 0 then the last p frame quantizer will be used (q= lastp_q*factor+offset). If < 0 then normal ratecontrol will be done (q= -normal_q*factor+offset).
#v.e.default.h264.i_quant_factor
# qscale offset between P and I-frames
#v.e.default.h264.i_quant_offset
# IDCT algorithm
#v.e.default.h264.idct_algo
# interlaced DCT comparison function
#v.e.default.h264.ildct_cmp
# precision of the intra DC coefficient - 8
#v.e.default.h264.intra_dc_precision
# minimum GOP size
#v.e.default.h264.keyint_min
# maximum number of B-frames between non-B-frames Note: The output will be delayed by max_b_frames+1 relative to the input.
#v.e.default.h264.max_b_frames
# maximum quantizer difference between frames
#v.e.default.h264.max_qdiff
# macroblock decision mode
#v.e.default.h264.mb_decision
# maximum MB lagrange multipler
#v.e.default.h264.mb_lmax
# minimum MB lagrange multipler
#v.e.default.h264.mb_lmin
# motion estimation prepass comparison function
#v.e.default.h264.me_pre_cmp
# Maximum motion estimation search range in subpel units. If 0 then no limit.
#v.e.default.h264.noise_reduction
# scene change detection threshold 0 is default, larger means fewer detected scene changes.
#v.e.default.h264.scenechange_threshold
# trellis RD quantization
#v.e.default.h264.trellis

#===================================================================================================
# These are the default filter graph options for encoding to h264.
#===================================================================================================
# This filter is used if the content is determined to be interlaced. Since frame doubling is
# enabled, every frame must be deinterlaced or the video might have a variable frame rate. Special
# characters such as backslash (\) must be escaped (\\) in this file.
v.e.default.h264.deinterlace_filter=yadif=mode=3, scale=w='trunc(oh*a/16)*16':h='min(720\\,ih)':interl=0:flags=bilinear, format=pix_fmts=yuv420p

# This filer is used if the content is determined to be progressive.
v.e.default.h264.progressive_filter=scale=w='trunc(oh*a/16)*16':h='min(720\\,ih)':interl=0:flags=bilinear, format=pix_fmts=yuv420p

# This filter is used for any 720p content. 'default' is an alias for 'w*.h*' The left to right most
# specific setting always wins if there is a conflict.
# Ex. w1280.h* and w1280.h720 would override w*.h720
v.e.w*.h720.h264.progressive_filter=format=pix_fmts=yuv420p

# This filter disables frame doubling for 1080i content so only 30 FPS needs to be processed.
v.e.w*.h1080.h264.deinterlace_filter=yadif=mode=2:deint=interlaced, scale=w='trunc(oh*a/16)*16':h='min(720\\,ih)':interl=0:flags=bilinear, format=pix_fmts=yuv420p